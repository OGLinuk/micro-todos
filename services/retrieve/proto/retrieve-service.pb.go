// Code generated by protoc-gen-go. DO NOT EDIT.
// source: retrieve-service.proto

/*
Package retrieve_service is a generated protocol buffer package.

It is generated from these files:
	retrieve-service.proto

It has these top-level messages:
	Task
	RetrieveRequest
	RetrieveResponse
	RetrieveAllRequest
	RetrieveAllResponse
*/
package retrieve_service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Task struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Priority    int32  `protobuf:"varint,4,opt,name=priority" json:"priority,omitempty"`
}

func (m *Task) Reset()                    { *m = Task{} }
func (m *Task) String() string            { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()               {}
func (*Task) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Task) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Task) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Task) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Task) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

type RetrieveRequest struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Id    string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *RetrieveRequest) Reset()                    { *m = RetrieveRequest{} }
func (m *RetrieveRequest) String() string            { return proto.CompactTextString(m) }
func (*RetrieveRequest) ProtoMessage()               {}
func (*RetrieveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RetrieveRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *RetrieveRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RetrieveResponse struct {
	Task *Task `protobuf:"bytes,1,opt,name=task" json:"task,omitempty"`
}

func (m *RetrieveResponse) Reset()                    { *m = RetrieveResponse{} }
func (m *RetrieveResponse) String() string            { return proto.CompactTextString(m) }
func (*RetrieveResponse) ProtoMessage()               {}
func (*RetrieveResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RetrieveResponse) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type RetrieveAllRequest struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *RetrieveAllRequest) Reset()                    { *m = RetrieveAllRequest{} }
func (m *RetrieveAllRequest) String() string            { return proto.CompactTextString(m) }
func (*RetrieveAllRequest) ProtoMessage()               {}
func (*RetrieveAllRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RetrieveAllRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type RetrieveAllResponse struct {
	Tasks []*Task `protobuf:"bytes,1,rep,name=tasks" json:"tasks,omitempty"`
}

func (m *RetrieveAllResponse) Reset()                    { *m = RetrieveAllResponse{} }
func (m *RetrieveAllResponse) String() string            { return proto.CompactTextString(m) }
func (*RetrieveAllResponse) ProtoMessage()               {}
func (*RetrieveAllResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *RetrieveAllResponse) GetTasks() []*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func init() {
	proto.RegisterType((*Task)(nil), "Task")
	proto.RegisterType((*RetrieveRequest)(nil), "RetrieveRequest")
	proto.RegisterType((*RetrieveResponse)(nil), "RetrieveResponse")
	proto.RegisterType((*RetrieveAllRequest)(nil), "RetrieveAllRequest")
	proto.RegisterType((*RetrieveAllResponse)(nil), "RetrieveAllResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TodoRetrieveService service

type TodoRetrieveServiceClient interface {
	Retrieve(ctx context.Context, in *RetrieveRequest, opts ...grpc.CallOption) (*RetrieveResponse, error)
	RetrieveAll(ctx context.Context, in *RetrieveAllRequest, opts ...grpc.CallOption) (*RetrieveAllResponse, error)
}

type todoRetrieveServiceClient struct {
	cc *grpc.ClientConn
}

func NewTodoRetrieveServiceClient(cc *grpc.ClientConn) TodoRetrieveServiceClient {
	return &todoRetrieveServiceClient{cc}
}

func (c *todoRetrieveServiceClient) Retrieve(ctx context.Context, in *RetrieveRequest, opts ...grpc.CallOption) (*RetrieveResponse, error) {
	out := new(RetrieveResponse)
	err := grpc.Invoke(ctx, "/TodoRetrieveService/Retrieve", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoRetrieveServiceClient) RetrieveAll(ctx context.Context, in *RetrieveAllRequest, opts ...grpc.CallOption) (*RetrieveAllResponse, error) {
	out := new(RetrieveAllResponse)
	err := grpc.Invoke(ctx, "/TodoRetrieveService/RetrieveAll", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TodoRetrieveService service

type TodoRetrieveServiceServer interface {
	Retrieve(context.Context, *RetrieveRequest) (*RetrieveResponse, error)
	RetrieveAll(context.Context, *RetrieveAllRequest) (*RetrieveAllResponse, error)
}

func RegisterTodoRetrieveServiceServer(s *grpc.Server, srv TodoRetrieveServiceServer) {
	s.RegisterService(&_TodoRetrieveService_serviceDesc, srv)
}

func _TodoRetrieveService_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoRetrieveServiceServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TodoRetrieveService/Retrieve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoRetrieveServiceServer).Retrieve(ctx, req.(*RetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoRetrieveService_RetrieveAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoRetrieveServiceServer).RetrieveAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TodoRetrieveService/RetrieveAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoRetrieveServiceServer).RetrieveAll(ctx, req.(*RetrieveAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TodoRetrieveService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "TodoRetrieveService",
	HandlerType: (*TodoRetrieveServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Retrieve",
			Handler:    _TodoRetrieveService_Retrieve_Handler,
		},
		{
			MethodName: "RetrieveAll",
			Handler:    _TodoRetrieveService_RetrieveAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "retrieve-service.proto",
}

func init() { proto.RegisterFile("retrieve-service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 264 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0x4f, 0x4b, 0xc3, 0x30,
	0x14, 0x27, 0x5d, 0x2b, 0xf3, 0x15, 0x74, 0xbe, 0x0e, 0x89, 0xf5, 0x52, 0x72, 0x1a, 0xc2, 0x22,
	0xd4, 0x83, 0x5e, 0xfd, 0x0a, 0x71, 0x5f, 0xa0, 0xae, 0x0f, 0x0c, 0x9d, 0x4d, 0x4d, 0xe2, 0xc0,
	0x9b, 0x1f, 0x5d, 0x96, 0xb6, 0x6e, 0x3a, 0xf1, 0x96, 0xf7, 0xcb, 0xfb, 0xfd, 0x4b, 0xe0, 0xd2,
	0x92, 0xb7, 0x9a, 0xb6, 0xb4, 0x74, 0x64, 0xb7, 0x7a, 0x4d, 0xb2, 0xb3, 0xc6, 0x1b, 0xf1, 0x02,
	0xf1, 0xaa, 0x72, 0x0d, 0x9e, 0x41, 0xa4, 0x6b, 0xce, 0x0a, 0xb6, 0x38, 0x55, 0x91, 0xae, 0x11,
	0x21, 0x6e, 0xab, 0x57, 0xe2, 0x51, 0x40, 0xc2, 0x19, 0x0b, 0x48, 0x6b, 0x72, 0x6b, 0xab, 0x3b,
	0xaf, 0x4d, 0xcb, 0x27, 0xe1, 0xea, 0x10, 0xc2, 0x1c, 0xa6, 0x9d, 0xd5, 0xc6, 0x6a, 0xff, 0xc1,
	0xe3, 0x82, 0x2d, 0x12, 0xf5, 0x3d, 0x8b, 0x7b, 0x38, 0x57, 0x43, 0x06, 0x45, 0x6f, 0xef, 0xe4,
	0x3c, 0xce, 0x21, 0xf1, 0xa6, 0xa1, 0x76, 0xf0, 0xed, 0x87, 0x21, 0x4a, 0x34, 0x46, 0x11, 0x4b,
	0x98, 0xed, 0x89, 0xae, 0x33, 0xad, 0x23, 0xbc, 0x82, 0xd8, 0x57, 0xae, 0x09, 0xc4, 0xb4, 0x4c,
	0xe4, 0xae, 0x83, 0x0a, 0x90, 0xb8, 0x01, 0x1c, 0xd7, 0x1f, 0x37, 0x9b, 0x7f, 0xad, 0x44, 0x09,
	0xd9, 0x8f, 0xdd, 0x41, 0xfd, 0x1a, 0x92, 0x9d, 0x94, 0xe3, 0xac, 0x98, 0xec, 0xe5, 0x7b, 0xac,
	0xfc, 0x64, 0x90, 0xad, 0x4c, 0x6d, 0x46, 0xe2, 0x53, 0xff, 0x9e, 0x78, 0x0b, 0xd3, 0x11, 0xc2,
	0x99, 0xfc, 0x55, 0x35, 0xbf, 0x90, 0x47, 0x1d, 0x1e, 0x20, 0x3d, 0x30, 0xc7, 0x4c, 0x1e, 0xc7,
	0xce, 0xe7, 0xf2, 0x8f, 0x7c, 0xcf, 0x27, 0xe1, 0xef, 0xee, 0xbe, 0x02, 0x00, 0x00, 0xff, 0xff,
	0xf4, 0xb3, 0x9b, 0xb9, 0xd5, 0x01, 0x00, 0x00,
}
